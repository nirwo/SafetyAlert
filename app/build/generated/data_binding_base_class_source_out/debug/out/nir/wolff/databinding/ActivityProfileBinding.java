// Generated by view binder compiler. Do not edit!
package nir.wolff.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nir.wolff.R;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton deleteAccountButton;

  @NonNull
  public final TextInputEditText displayNameInput;

  @NonNull
  public final TextInputEditText emailInput;

  @NonNull
  public final TextInputEditText emergencyContactInput;

  @NonNull
  public final TextInputEditText phoneInput;

  @NonNull
  public final MaterialButton signOutButton;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final MaterialButton updateProfileButton;

  private ActivityProfileBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton deleteAccountButton, @NonNull TextInputEditText displayNameInput,
      @NonNull TextInputEditText emailInput, @NonNull TextInputEditText emergencyContactInput,
      @NonNull TextInputEditText phoneInput, @NonNull MaterialButton signOutButton,
      @NonNull Toolbar toolbar, @NonNull MaterialButton updateProfileButton) {
    this.rootView = rootView;
    this.deleteAccountButton = deleteAccountButton;
    this.displayNameInput = displayNameInput;
    this.emailInput = emailInput;
    this.emergencyContactInput = emergencyContactInput;
    this.phoneInput = phoneInput;
    this.signOutButton = signOutButton;
    this.toolbar = toolbar;
    this.updateProfileButton = updateProfileButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteAccountButton;
      MaterialButton deleteAccountButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteAccountButton == null) {
        break missingId;
      }

      id = R.id.displayNameInput;
      TextInputEditText displayNameInput = ViewBindings.findChildViewById(rootView, id);
      if (displayNameInput == null) {
        break missingId;
      }

      id = R.id.emailInput;
      TextInputEditText emailInput = ViewBindings.findChildViewById(rootView, id);
      if (emailInput == null) {
        break missingId;
      }

      id = R.id.emergencyContactInput;
      TextInputEditText emergencyContactInput = ViewBindings.findChildViewById(rootView, id);
      if (emergencyContactInput == null) {
        break missingId;
      }

      id = R.id.phoneInput;
      TextInputEditText phoneInput = ViewBindings.findChildViewById(rootView, id);
      if (phoneInput == null) {
        break missingId;
      }

      id = R.id.signOutButton;
      MaterialButton signOutButton = ViewBindings.findChildViewById(rootView, id);
      if (signOutButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.updateProfileButton;
      MaterialButton updateProfileButton = ViewBindings.findChildViewById(rootView, id);
      if (updateProfileButton == null) {
        break missingId;
      }

      return new ActivityProfileBinding((LinearLayout) rootView, deleteAccountButton,
          displayNameInput, emailInput, emergencyContactInput, phoneInput, signOutButton, toolbar,
          updateProfileButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
