// Generated by view binder compiler. Do not edit!
package nir.wolff.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nir.wolff.R;

public final class ActivityAlertBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextInputEditText alertMessageInput;

  @NonNull
  public final TextInputLayout alertMessageLayout;

  @NonNull
  public final MaterialButton sendAlertButton;

  @NonNull
  public final Toolbar toolbar;

  private ActivityAlertBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TextInputEditText alertMessageInput, @NonNull TextInputLayout alertMessageLayout,
      @NonNull MaterialButton sendAlertButton, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.alertMessageInput = alertMessageInput;
    this.alertMessageLayout = alertMessageLayout;
    this.sendAlertButton = sendAlertButton;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAlertBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAlertBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_alert, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAlertBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alertMessageInput;
      TextInputEditText alertMessageInput = ViewBindings.findChildViewById(rootView, id);
      if (alertMessageInput == null) {
        break missingId;
      }

      id = R.id.alertMessageLayout;
      TextInputLayout alertMessageLayout = ViewBindings.findChildViewById(rootView, id);
      if (alertMessageLayout == null) {
        break missingId;
      }

      id = R.id.sendAlertButton;
      MaterialButton sendAlertButton = ViewBindings.findChildViewById(rootView, id);
      if (sendAlertButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAlertBinding((CoordinatorLayout) rootView, alertMessageInput,
          alertMessageLayout, sendAlertButton, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
