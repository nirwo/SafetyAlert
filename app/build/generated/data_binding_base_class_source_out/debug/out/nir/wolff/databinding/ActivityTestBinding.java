// Generated by view binder compiler. Do not edit!
package nir.wolff.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nir.wolff.R;

public final class ActivityTestBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView alertsRecyclerView;

  @NonNull
  public final TextView resultTextView;

  @NonNull
  public final Button testAlertsButton;

  @NonNull
  public final Button testApiButton;

  @NonNull
  public final Button testLocationButton;

  private ActivityTestBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView alertsRecyclerView, @NonNull TextView resultTextView,
      @NonNull Button testAlertsButton, @NonNull Button testApiButton,
      @NonNull Button testLocationButton) {
    this.rootView = rootView;
    this.alertsRecyclerView = alertsRecyclerView;
    this.resultTextView = resultTextView;
    this.testAlertsButton = testAlertsButton;
    this.testApiButton = testApiButton;
    this.testLocationButton = testLocationButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_test, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alertsRecyclerView;
      RecyclerView alertsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (alertsRecyclerView == null) {
        break missingId;
      }

      id = R.id.resultTextView;
      TextView resultTextView = ViewBindings.findChildViewById(rootView, id);
      if (resultTextView == null) {
        break missingId;
      }

      id = R.id.testAlertsButton;
      Button testAlertsButton = ViewBindings.findChildViewById(rootView, id);
      if (testAlertsButton == null) {
        break missingId;
      }

      id = R.id.testApiButton;
      Button testApiButton = ViewBindings.findChildViewById(rootView, id);
      if (testApiButton == null) {
        break missingId;
      }

      id = R.id.testLocationButton;
      Button testLocationButton = ViewBindings.findChildViewById(rootView, id);
      if (testLocationButton == null) {
        break missingId;
      }

      return new ActivityTestBinding((LinearLayout) rootView, alertsRecyclerView, resultTextView,
          testAlertsButton, testApiButton, testLocationButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
