// Generated by view binder compiler. Do not edit!
package nir.wolff.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nir.wolff.R;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LinearLayout bottomActions;

  @NonNull
  public final ExtendedFloatingActionButton createGroupFab;

  @NonNull
  public final RecyclerView groupsRecyclerView;

  @NonNull
  public final TextView noGroupsText;

  @NonNull
  public final MaterialButton profileButton;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final MaterialButton signInButton;

  @NonNull
  public final MaterialButton signOutButton;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView userEmailText;

  @NonNull
  public final MaterialCardView welcomeCard;

  @NonNull
  public final TextView welcomeText;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LinearLayout bottomActions, @NonNull ExtendedFloatingActionButton createGroupFab,
      @NonNull RecyclerView groupsRecyclerView, @NonNull TextView noGroupsText,
      @NonNull MaterialButton profileButton, @NonNull ProgressBar progressBar,
      @NonNull MaterialButton signInButton, @NonNull MaterialButton signOutButton,
      @NonNull Toolbar toolbar, @NonNull TextView userEmailText,
      @NonNull MaterialCardView welcomeCard, @NonNull TextView welcomeText) {
    this.rootView = rootView;
    this.bottomActions = bottomActions;
    this.createGroupFab = createGroupFab;
    this.groupsRecyclerView = groupsRecyclerView;
    this.noGroupsText = noGroupsText;
    this.profileButton = profileButton;
    this.progressBar = progressBar;
    this.signInButton = signInButton;
    this.signOutButton = signOutButton;
    this.toolbar = toolbar;
    this.userEmailText = userEmailText;
    this.welcomeCard = welcomeCard;
    this.welcomeText = welcomeText;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomActions;
      LinearLayout bottomActions = ViewBindings.findChildViewById(rootView, id);
      if (bottomActions == null) {
        break missingId;
      }

      id = R.id.createGroupFab;
      ExtendedFloatingActionButton createGroupFab = ViewBindings.findChildViewById(rootView, id);
      if (createGroupFab == null) {
        break missingId;
      }

      id = R.id.groupsRecyclerView;
      RecyclerView groupsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (groupsRecyclerView == null) {
        break missingId;
      }

      id = R.id.noGroupsText;
      TextView noGroupsText = ViewBindings.findChildViewById(rootView, id);
      if (noGroupsText == null) {
        break missingId;
      }

      id = R.id.profileButton;
      MaterialButton profileButton = ViewBindings.findChildViewById(rootView, id);
      if (profileButton == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.signInButton;
      MaterialButton signInButton = ViewBindings.findChildViewById(rootView, id);
      if (signInButton == null) {
        break missingId;
      }

      id = R.id.signOutButton;
      MaterialButton signOutButton = ViewBindings.findChildViewById(rootView, id);
      if (signOutButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.userEmailText;
      TextView userEmailText = ViewBindings.findChildViewById(rootView, id);
      if (userEmailText == null) {
        break missingId;
      }

      id = R.id.welcomeCard;
      MaterialCardView welcomeCard = ViewBindings.findChildViewById(rootView, id);
      if (welcomeCard == null) {
        break missingId;
      }

      id = R.id.welcomeText;
      TextView welcomeText = ViewBindings.findChildViewById(rootView, id);
      if (welcomeText == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, bottomActions, createGroupFab,
          groupsRecyclerView, noGroupsText, profileButton, progressBar, signInButton, signOutButton,
          toolbar, userEmailText, welcomeCard, welcomeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
